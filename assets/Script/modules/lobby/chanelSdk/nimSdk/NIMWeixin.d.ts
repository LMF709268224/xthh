/** Declaration file generated by dts-gen */
export = NIMWeixin;
export as namespace NIMWeixin;
declare class NIMWeixin {
    constructor(e: any);

    acceptTeamInvite(e: any): void;

    addFriend(e: any): void;

    addSuperTeamMembers(e: any): void;

    addTeamManagers(e: any): void;

    addTeamMembers(e: any): void;

    addToBlacklist(e: any): any;

    addToMutelist(e: any): any;

    afterSendMsg(e: any): void;

    applyFriend(e: any): void;

    applyTeam(e: any): void;

    assembleTeamMembers(e: any, t: any): any;

    assembleTeamOwner(e: any): any;

    audioToText(e: any): void;

    batchSendEventsCmds(e: any, t: any, n: any): void;

    beforeForwardMsg(e: any): void;

    beforeSendMsg(e: any): void;

    clearDB(e: any): void;

    clearServerHistoryMsgs(e: any): void;

    closeDB(e: any): void;

    createTeam(e: any): void;

    cutFriends(e: any, t: any): any;

    cutFriendsByAccounts(e: any, t: any): any;

    cutLoginPorts(e: any, t: any): any;

    cutMsgs(e: any, t: any): any;

    cutMsgsByIdClients(e: any, t: any): any;

    cutObjArray(e: any, t: any, n: any): any;

    cutRelations(e: any, t: any): any;

    cutSessions(e: any, t: any): any;

    cutSessionsByIds(e: any, t: any): any;

    cutSysMsgs(e: any, t: any): any;

    cutSysMsgsByIdServers(e: any, t: any): any;

    cutTeamMembers(e: any, t: any): any;

    cutTeamMembersByAccounts(e: any, t: any, n: any): any;

    cutTeams(e: any, t: any): any;

    deleteAllLocalMsgs(e: any): void;

    deleteAllLocalSysMsgs(e: any): void;

    deleteFriend(e: any): void;

    deleteLocalMsg(e: any): void;

    deleteLocalMsgs(e: any): void;

    deleteLocalMsgsBySession(e: any): void;

    deleteLocalSession(e: any): void;

    deleteLocalSysMsg(e: any): void;

    deleteLocalTeam(e: any): void;

    deleteMsg(e: any): any;

    deleteSession(e: any): void;

    deleteSessions(e: any): any;

    dismissTeam(e: any): void;

    findFriend(e: any, t: any): any;

    findMsg(e: any, t: any): any;

    findRelation(e: any, t: any): any;

    findSession(e: any, t: any): any;

    findSysMsg(e: any, t: any): any;

    findTeam(e: any, t: any): any;

    findTeamMember(e: any, t: any): any;

    findUser(e: any, t: any): any;

    formatReturnSysMsg(e: any): any;

    friendRequest(e: any): void;

    genTeamMemberId(e: any, t: any): any;

    getAllSuperTeamMembers(e: any): any;

    getChatroomAddress(e: any): void;

    getFriends(e: any): void;

    getHistoryMsgs(e: any): any;

    getLocalMsgByIdClient(e: any): void;

    getLocalMsgs(e: any): void;

    getLocalMsgsByIdClients(e: any): any;

    getLocalSession(e: any): any;

    getLocalSessions(e: any): void;

    getLocalSysMsgs(e: any): void;

    getLocalTeamMembers(e: any): any;

    getLocalTeams(e: any): any;

    getMutedTeamMembers(e: any): void;

    getMyInfo(e: any): any;

    getMyTeamMembers(e: any): any;

    getPushNotificationMultiportConfig(): any;

    getRelations(e: any): void;

    getRobots(e: any): void;

    getSuperTeam(e: any): void;

    getSuperTeamMembersByJoinTime(e: any): void;

    getSuperTeams(e: any): void;

    getTeam(e: any): void;

    getTeamMemberByTeamIdAndAccount(e: any): void;

    getTeamMemberInvitorAccid(e: any): void;

    getTeamMembers(e: any): void;

    getTeamMsgReadAccounts(e: any): void;

    getTeamMsgReads(e: any): void;

    getTeams(e: any): void;

    getUser(e: any): any;

    getUsers(e: any): any;

    insertLocalSession(e: any): void;

    isMsgRemoteRead(e: any): any;

    kick(e: any): void;

    leaveSuperTeam(e: any): void;

    leaveTeam(e: any): void;

    markInBlacklist(e: any): void;

    markInMutelist(e: any): void;

    markMsgRead(e: any): void;

    markSysMsgRead(e: any): any;

    mergeFriends(e: any, t: any): any;

    mergeLoginPorts(e: any, t: any): any;

    mergeMsgs(e: any, t: any): any;

    mergeObjArray(e: any, t: any, n: any): any;

    mergeRelations(e: any, t: any): any;

    mergeSessions(e: any, t: any): any;

    mergeSysMsgs(e: any, t: any): any;

    mergeTeamMembers(e: any, t: any): any;

    mergeTeams(e: any, t: any): any;

    mergeUsers(e: any, t: any): any;

    muteTeamAll(e: any): void;

    notifyForNewTeamMsg(e: any): void;

    passFriendApply(e: any): void;

    passTeamApply(e: any): void;

    publishEvent(e: any): void;

    querySubscribeEventsByAccounts(e: any): void;

    querySubscribeEventsByType(e: any): void;

    rejectFriendApply(e: any): void;

    rejectTeamApply(e: any): void;

    rejectTeamInvite(e: any): void;

    removeDB(e: any): void;

    removeFromBlacklist(e: any): any;

    removeFromMutelist(e: any): any;

    removeSuperTeamMembers(e: any): void;

    removeTeamManagers(e: any): void;

    removeTeamMembers(e: any): void;

    resetAllSessionUnread(): void;

    resetCurrSession(): void;

    resetSessionUnread(e: any): void;

    searchHistoryMsgs(e: any): void;

    sendCustomSysMsg(e: any): any;

    sendMsgReceipt(e: any): void;

    sendTeamMsgReceipt(e: any): void;

    setCurrSession(e: any): void;

    subscribeEvent(e: any): void;

    transferTeam(e: any): void;

    unSubscribeEventsByAccounts(e: any): void;

    unSubscribeEventsByType(e: any): void;

    updateFriend(e: any): void;

    updateInfoInSuperTeam(e: any): void;

    updateInfoInTeam(e: any): void;

    updateLocalMsg(e: any): void;

    updateLocalSession(e: any): void;

    updateLocalSysMsg(e: any): void;

    updateMuteStateInTeam(e: any): void;

    updateMyInfo(e: any): void;

    updateNickInTeam(e: any): void;

    updatePushNotificationMultiportConfig(e: any): void;

    updateSuperTeam(e: any): void;

    updateTeam(e: any): void;

    static ajax(e: any, t: any): any;

    static deepAccess(e: any, t: any): any;

    static genInstanceName(e: any): any;

    static getInstance(e: any): any;

    static info: {
        hash: string;
        nrtcSdkVersion: string;
        nrtcVersion: string;
        protocolVersion: number;
        sdkVersion: string;
        shortHash: string;
        version: string;
    };

    static naturalSort(t: any, n: any): any;

    static platform: {
        description: string;
        layout: any;
        manufacturer: any;
        name: string;
        os: {
            architecture: number;
            family: string;
            version: string;
        };
        prerelease: any;
        product: any;
        ua: string;
        version: string;
    };

    static rmAllInstances(): void;

    static use(e: any, t: any): void;

    static usePlugin(e: any): void;

    static xhr(e: any, t: any, n: any): any;

}


declare namespace NIMWeixin {
    class LoggerPlugin {
        constructor(e: any);

        cacheLogs(e: any, t: any): void;

        debug(...args: any[]): void;

        error(...args: any[]): void;

        info(...args: any[]): void;

        log(...args: any[]): void;

        postLogs(e: any, t: any): void;

        warn(...args: any[]): void;

    }

    class Protocol {
        constructor(e: any);

        afterLogin(): void;

        assembleLogin(): any;

        beforeSync(): any;

        cacheSyncedSession(e: any): void;

        checkAndUpdateLocalSessionByMsg(e: any): any;

        checkIgnore(e: any): void;

        checkMsgUnique(t: any): any;

        checkSysMsgUnique(t: any): any;

        checkUserUpdate(e: any): any;

        completeMsg(e: any): any;

        completeSysMsg(e: any): any;

        dbDonnop(): any;

        deleteLocalMsg(e: any, t: any): any;

        deleteLocalSession(e: any): void;

        deleteMsgOfflineRoaming(e: any, t: any): any;

        doMarkBroadcastMsgsRead(e: any): any;

        doMarkMsgsRead(e: any, t: any, n: any): any;

        filterIgnore(e: any): any;

        findSession(e: any): any;

        genSessionByMsgs(e: any): any;

        genSessionFromMsgReceipt(e: any, t: any): any;

        getPushNotificationMultiportConfig(): any;

        getSysMsgUnread(): any;

        handleMsg(e: any): any;

        handleSysMsg(e: any): any;

        init(): void;

        insertLocalSession(e: any): any;

        isFilterMsgs(e: any): any;

        isMsgRemoteRead(e: any): any;

        markFilterMsgsRead(e: any): void;

        markInBlacklist(e: any, t: any): void;

        markInMutelist(e: any, t: any): void;

        markMsgRead(e: any, t: any): void;

        markP2pMsgsRead(e: any): void;

        markSysMsgRead(e: any, t: any): void;

        markTeamMsgsRead(e: any): void;

        markUnreadByMsgsPromise(e: any): void;

        markUnreadBySessionAck(e: any): any;

        mergeDonnop(e: any): void;

        mergeMyTeamMembers(e: any): void;

        mergeSession(e: any): any;

        mergeSessionAndMsgReceipts(e: any, t: any): any;

        mergeSessions(e: any): void;

        mergeUser(e: any): void;

        notifyForNewTeamMsg(e: any): any;

        onAddSuperTeamMembers(e: any, t: any, n: any): any;

        onAddTeamMembers(e: any, t: any, n: any): any;

        onBroadcastMsg(e: any): void;

        onBroadcastMsgs(e: any): any;

        onChatroomAddress(e: any): void;

        onCreateSuperTeam(e: any, t: any): void;

        onCreateTeam(e: any, t: any): void;

        onDeleteFriend(e: any, t: any): any;

        onDeleteMsg(e: any): void;

        onDeleteMsgOfflineRoaming(e: any): any;

        onDeleteSessions(e: any): any;

        onDismissSuperTeam(e: any, t: any): any;

        onDismissTeam(e: any, t: any): any;

        onDonnop(e: any, t: any): any;

        onFriendRequest(e: any, t: any): any;

        onFriendUsers(e: any): any;

        onFriends(e: any): any;

        onGetAllSuperTeamMembers(e: any): any;

        onHistoryMsgs(e: any): void;

        onLoginPortsChange(e: any, t: any): any;

        onMarkSessionAck(e: any): void;

        onMsg(e: any, t: any): void;

        onMsgDeleted(e: any): void;

        onMsgReceipt(e: any): void;

        onMsgs(e: any): void;

        onMyInfo(e: any): any;

        onOfflineMsgReceipts(e: any): any;

        onOfflineMsgs(e: any, t: any): any;

        onOfflineSysMsgs(e: any, t: any): any;

        onPushNotificationMultiportConfigUpdate(): void;

        onRelations(e: any): any;

        onRemoveSuperTeamMembers(e: any, t: any, n: any): any;

        onRemoveTeamMembers(e: any, t: any, n: any): any;

        onRoamingMsgs(e: any): any;

        onRobots(e: any): any;

        onSendMsg(e: any, t: any): any;

        onSendMsgReceipt(e: any): void;

        onSendSysMsg(e: any, t: any): void;

        onSuperTeamMembers(e: any): void;

        onSuperTeams(e: any): any;

        onSyncData(e: any, t: any): void;

        onSyncDone(e: any): any;

        onSyncFriendAction(e: any): void;

        onSyncMyTeamMembers(e: any): any;

        onSyncSuperTeamMembers(e: any): any;

        onSyncTeamMembers(e: any, t: any): void;

        onSyncTeamMembersDone(): any;

        onSysMsg(e: any, t: any): void;

        onTeamMembers(e: any): void;

        onTeamMsgReceipt(e: any): void;

        onTeamNotificationMsg(e: any): any;

        onTeams(e: any): any;

        onUpdateDonnop(e: any): void;

        onUpdateFriend(e: any, t: any): void;

        onUpdateMyInfo(e: any, t: any, n: any): void;

        onUpdateSession(e: any): any;

        onUpdateSuperTeam(e: any): void;

        onUpdateSuperTeamMember(e: any): void;

        onUpdateSuperTeamMembersMute(e: any, t: any, n: any, r: any): any;

        onUpdateSysMsg(e: any): void;

        onUpdateSysMsgUnread(e: any): void;

        onUpdateTeam(e: any): void;

        onUpdateTeamMember(e: any): void;

        onUpdateTeamMembersMute(e: any, t: any, n: any, r: any): any;

        packetFromSync(e: any): any;

        processAuth(e: any): void;

        processChatroom(e: any): void;

        processDeleteMsgSysMsg(e: any): any;

        processEventService(e: any): any;

        processFilter(e: any): void;

        processFriend(e: any): void;

        processMsg(e: any): void;

        processNotify(e: any): void;

        processSuperTeam(e: any): void;

        processSync(e: any): void;

        processTeam(e: any): void;

        processUnsettledMsgs(): any;

        processUnsettledSysMsgs(): void;

        processUser(e: any): any;

        pushMsgTask(e: any): any;

        putBroadcastMsg(e: any): any;

        putBroadcastMsgs(e: any): any;

        putMsg(e: any, t: any): any;

        putSysMsg(e: any, t: any): any;

        reduceSysMsgUnread(e: any): any;

        refreshSocketUrl(): void;

        reset(): void;

        resetAutoMarkRead(): void;

        resetSessionUnread(e: any): void;

        resetUnsettledMsgs(): void;

        resetUnsettledSysMsgs(): void;

        resolveMsgReceiptTask(e: any): void;

        setCurrSession(e: any): void;

        shouldSendMsgReceipt(e: any): any;

        shouldUpdateSessionFromMsgReceipt(e: any, t: any): any;

        splitMsgs(e: any, t: any, n: any, r: any): void;

        splitSysMsgs(e: any, t: any): void;

        storeSendMsg(e: any): any;

        storeSessionAck(e: any): void;

        syncData(): any;

        syncMarkSessionAck(e: any): void;

        syncSessionAck(e: any): any;

        syncTeamMembers(e: any): void;

        transferSuperTeam(e: any, t: any, n: any, r: any): any;

        transferTeam(e: any, t: any, n: any, r: any): any;

        updateFriendSysMsg(e: any): void;

        updateLocalMsg(e: any): any;

        updateLocalSession(e: any, t: any): any;

        updateMsg(e: any): any;

        updateRoamingMsgTimetag(e: any): any;

        updateSendMsgError(e: any): any;

        updateSessionMsgReceiptTime(e: any): void;

        updateSuperTeamManagers(e: any, t: any, n: any, r: any, i: any): any;

        updateSysMsg(e: any): void;

        updateSysMsgUnread(e: any, t: any, n: any): any;

        updateTeamManagers(e: any, t: any, n: any, r: any, i: any): any;

        updateTeamSysMsgState(e: any, t: any): void;

    }

    namespace Protocol {
        namespace fn {
            const kickedMessages: string[];

            const kickedReasons: string[];

            function afterLogin(): void;

            function assembleIMLogin(): any;

            function assembleLogin(): any;

            function beforeSync(): any;

            function cacheSyncedSession(e: any): void;

            function callPacketAckCallback(e: any): void;

            function checkAndUpdateLocalSessionByMsg(e: any): any;

            function checkIgnore(e: any): void;

            function checkMsgUnique(t: any): any;

            function checkSysMsgUnique(t: any): any;

            function checkUserUpdate(e: any): any;

            function clearTimerWithSer(e: any): void;

            function completeMsg(e: any): any;

            function completeSysMsg(e: any): any;

            function connect(e: any): void;

            function connectToUrl(e: any): void;

            function dbDonnop(): any;

            function deleteLocalMsg(e: any, t: any): any;

            function deleteLocalSession(e: any): void;

            function deleteMsgOfflineRoaming(e: any, t: any): any;

            function disconnect(e: any): void;

            function disconnectSocket(): void;

            function doMarkBroadcastMsgsRead(e: any): any;

            function doMarkMsgsRead(e: any, t: any, n: any): any;

            function doReconnect(): void;

            function doSendCmd(e: any): void;

            function emitAPI(e: any): void;

            function executeCmdTask(e: any): void;

            function filterIgnore(e: any): any;

            function findSession(e: any): any;

            function genSessionByMsgs(e: any): any;

            function genSessionFromMsgReceipt(e: any, t: any): any;

            function genSessionKey(): any;

            function getCallbackWithSer(e: any): any;

            function getNextSocketUrl(): any;

            function getObjWithSer(e: any): any;

            function getPacketObj(e: any): any;

            function getPushNotificationMultiportConfig(): any;

            function getSysMsgUnread(): any;

            function getTimerWithSer(e: any): any;

            function handleMsg(e: any): any;

            function handleSysMsg(e: any): any;

            function heartbeat(): void;

            function init(): void;

            function initConnect(): void;

            function insertLocalSession(e: any): any;

            function isConnected(): any;

            function isFilterMsgs(e: any): any;

            function isFrequencyControlled(e: any): any;

            function isMsgRemoteRead(e: any): any;

            function login(): any;

            function logout(): any;

            function markAllCallbackInvalid(e: any): void;

            function markCallbackInvalid(e: any, t: any): void;

            function markFilterMsgsRead(e: any): void;

            function markInBlacklist(e: any, t: any): void;

            function markInMutelist(e: any, t: any): void;

            function markMsgRead(e: any, t: any): void;

            function markP2pMsgsRead(e: any): void;

            function markSysMsgRead(e: any, t: any): void;

            function markTeamMsgsRead(e: any): void;

            function markUnreadByMsgsPromise(e: any): void;

            function markUnreadBySessionAck(e: any): any;

            function mergeDonnop(e: any): void;

            function mergeMyTeamMembers(e: any): void;

            function mergeSession(e: any): any;

            function mergeSessionAndMsgReceipts(e: any, t: any): any;

            function mergeSessions(e: any): void;

            function mergeUser(e: any): void;

            function notifyConnectError(e: any): void;

            function notifyDisconnect(e: any): void;

            function notifyError(e: any, t: any, n: any): void;

            function notifyForNewTeamMsg(e: any): any;

            function notifyLogin(): void;

            function onAddSuperTeamMembers(e: any, t: any, n: any): any;

            function onAddTeamMembers(e: any, t: any, n: any): any;

            function onAuthError(e: any, t: any): void;

            function onBroadcastMsg(e: any): void;

            function onBroadcastMsgs(e: any): any;

            function onChatroomAddress(e: any): void;

            function onConnect(): void;

            function onConnectFailed(): void;

            function onCreateSuperTeam(e: any, t: any): void;

            function onCreateTeam(e: any, t: any): void;

            function onCustomError(e: any, t: any): void;

            function onDeleteFriend(e: any, t: any): any;

            function onDeleteMsg(e: any): void;

            function onDeleteMsgOfflineRoaming(e: any): any;

            function onDeleteSessions(e: any): any;

            function onDisconnect(...args: any[]): void;

            function onDismissSuperTeam(e: any, t: any): any;

            function onDismissTeam(e: any, t: any): any;

            function onDonnop(e: any, t: any): any;

            function onError(...args: any[]): void;

            function onFriendRequest(e: any, t: any): any;

            function onFriendUsers(e: any): any;

            function onFriends(e: any): any;

            function onGetAllSuperTeamMembers(e: any): any;

            function onHandshakeFailed(): void;

            function onHeartbeat(e: any, t: any): void;

            function onHistoryMsgs(e: any): void;

            function onKicked(e: any): void;

            function onLogin(e: any, t: any): void;

            function onLoginPortsChange(e: any, t: any): any;

            function onMarkSessionAck(e: any): void;

            function onMessage(e: any): void;

            function onMiscError(e: any, t: any, n: any): void;

            function onMsg(e: any, t: any): void;

            function onMsgDeleted(e: any): void;

            function onMsgReceipt(e: any): void;

            function onMsgs(e: any): void;

            function onMyInfo(e: any): any;

            function onOfflineMsgReceipts(e: any): any;

            function onOfflineMsgs(e: any, t: any): any;

            function onOfflineSysMsgs(e: any, t: any): any;

            function onPushNotificationMultiportConfigUpdate(): void;

            function onRelations(e: any): any;

            function onRemoveSuperTeamMembers(e: any, t: any, n: any): any;

            function onRemoveTeamMembers(e: any, t: any, n: any): any;

            function onRoamingMsgs(e: any): any;

            function onRobots(e: any): any;

            function onSendMsg(e: any, t: any): any;

            function onSendMsgReceipt(e: any): void;

            function onSendSysMsg(e: any, t: any): void;

            function onSignalingMembersSyncNotify(e: any): any;

            function onSignalingMutilClientSyncNotify(e: any): void;

            function onSignalingNotify(e: any): any;

            function onSignalingUnreadMessageSyncNotify(e: any): any;

            function onSuperTeamMembers(e: any): void;

            function onSuperTeams(e: any): any;

            function onSyncData(e: any, t: any): void;

            function onSyncDone(e: any): any;

            function onSyncFriendAction(e: any): void;

            function onSyncMyTeamMembers(e: any): any;

            function onSyncSuperTeamMembers(e: any): any;

            function onSyncTeamMembers(e: any, t: any): void;

            function onSyncTeamMembersDone(): any;

            function onSysMsg(e: any, t: any): void;

            function onTeamMembers(e: any): void;

            function onTeamMsgReceipt(e: any): void;

            function onTeamNotificationMsg(e: any): any;

            function onTeams(e: any): any;

            function onUpdateDonnop(e: any): void;

            function onUpdateFriend(e: any, t: any): void;

            function onUpdateMyInfo(e: any, t: any, n: any): void;

            function onUpdateSession(e: any): any;

            function onUpdateSuperTeam(e: any): void;

            function onUpdateSuperTeamMember(e: any): void;

            function onUpdateSuperTeamMembersMute(e: any, t: any, n: any, r: any): any;

            function onUpdateSysMsg(e: any): void;

            function onUpdateSysMsgUnread(e: any): void;

            function onUpdateTeam(e: any): void;

            function onUpdateTeamMember(e: any): void;

            function onUpdateTeamMembersMute(e: any, t: any, n: any, r: any): any;

            function packetFromSync(e: any): any;

            function processAuth(e: any): void;

            function processAvSignal(e: any): void;

            function processChatroom(e: any): void;

            function processDeleteMsgSysMsg(e: any): any;

            function processEventService(e: any): any;

            function processFilter(e: any): void;

            function processFriend(e: any): void;

            function processLink(e: any): void;

            function processMisc(e: any): void;

            function processMsg(e: any): void;

            function processNotify(e: any): void;

            function processSuperTeam(e: any): void;

            function processSync(e: any): void;

            function processTeam(e: any): void;

            function processUnsettledMsgs(): any;

            function processUnsettledSysMsgs(): void;

            function processUser(e: any): any;

            function pushMsgTask(e: any): any;

            function putBroadcastMsg(e: any): any;

            function putBroadcastMsgs(e: any): any;

            function putMsg(e: any, t: any): any;

            function putSysMsg(e: any, t: any): any;

            function reconnect(): void;

            function reduceSysMsgUnread(e: any): any;

            function refreshSocketUrl(): void;

            function reset(): void;

            function resetAutoMarkRead(): void;

            function resetConnect(): void;

            function resetSessionUnread(e: any): void;

            function resetUnsettledMsgs(): void;

            function resetUnsettledSysMsgs(): void;

            function resolveMsgReceiptTask(e: any): void;

            function sendCmd(e: any, ...args: any[]): void;

            function setCurrSession(e: any): void;

            function setOptions(e: any): void;

            function shouldNotifyKicked(e: any): any;

            function shouldSendMsgReceipt(e: any): any;

            function shouldUpdateSessionFromMsgReceipt(e: any, t: any): any;

            function splitMsgs(e: any, t: any, n: any, r: any): void;

            function splitSysMsgs(e: any, t: any): void;

            function startCmdTaskTimer(): void;

            function startHeartbeat(): void;

            function stopHeartbeat(): void;

            function storeSendMsg(e: any): any;

            function storeSessionAck(e: any): void;

            function syncData(): any;

            function syncMarkSessionAck(e: any): void;

            function syncSessionAck(e: any): any;

            function syncTeamMembers(e: any): void;

            function transferSuperTeam(e: any, t: any, n: any, r: any): any;

            function transferTeam(e: any, t: any, n: any, r: any): any;

            function updateFriendSysMsg(e: any): void;

            function updateLocalMsg(e: any): any;

            function updateLocalSession(e: any, t: any): any;

            function updateMsg(e: any): any;

            function updateRoamingMsgTimetag(e: any): any;

            function updateSendMsgError(e: any): any;

            function updateSessionMsgReceiptTime(e: any): void;

            function updateSuperTeamManagers(e: any, t: any, n: any, r: any, i: any): any;

            function updateSysMsg(e: any): void;

            function updateSysMsgUnread(e: any, t: any, n: any): any;

            function updateTeamManagers(e: any, t: any, n: any, r: any, i: any): any;

            function updateTeamSysMsgState(e: any, t: any): void;

            function willReconnect(): any;

        }

    }

    namespace ajax {
        function abort(e: any): void;

        function chunkUpload(e: any, t: any, n: any): any;

        function filter(e: any): void;

        function json(e: any, t: any): any;

        function upload(e: any, t: any): any;

    }

    namespace blob {
        function fromDataURL(e: any): any;

    }

    namespace fn {
        const info: {
            hash: string;
            nrtcSdkVersion: string;
            nrtcVersion: string;
            protocolVersion: number;
            sdkVersion: string;
            shortHash: string;
            version: string;
        };

        function acceptTeamInvite(e: any): void;

        function addFriend(e: any): void;

        function addListener(e: any, t: any, n: any): any;

        function addSuperTeamMembers(e: any): void;

        function addTeamManagers(e: any): void;

        function addTeamMembers(e: any): void;

        function addToBlacklist(e: any): any;

        function addToMutelist(e: any): any;

        function afterSendMsg(e: any): void;

        function applyFriend(e: any): void;

        function applyTeam(e: any): void;

        function assembleTeamMembers(e: any, t: any): any;

        function assembleTeamOwner(e: any): any;

        function assembleUploadParams(e: any): any;

        function audioToMp3(e: any): any;

        function audioToText(e: any): void;

        function batchSendEventsCmds(e: any, t: any, n: any): void;

        function beforeForwardMsg(e: any): void;

        function beforeProcessImage(e: any, t: any): any;

        function beforeSendMsg(e: any): void;

        function blurImage(e: any): any;

        function cbAndSendCmd(e: any, t: any): any;

        function clearDB(e: any): void;

        function clearServerHistoryMsgs(e: any): void;

        function closeDB(e: any): void;

        function connect(): void;

        function createTeam(e: any): void;

        function cropImage(e: any): any;

        function cutFriends(e: any, t: any): any;

        function cutFriendsByAccounts(e: any, t: any): any;

        function cutLoginPorts(e: any, t: any): any;

        function cutMsgs(e: any, t: any): any;

        function cutMsgsByIdClients(e: any, t: any): any;

        function cutObjArray(e: any, t: any, n: any): any;

        function cutRelations(e: any, t: any): any;

        function cutSessions(e: any, t: any): any;

        function cutSessionsByIds(e: any, t: any): any;

        function cutSysMsgs(e: any, t: any): any;

        function cutSysMsgsByIdServers(e: any, t: any): any;

        function cutTeamMembers(e: any, t: any): any;

        function cutTeamMembersByAccounts(e: any, t: any, n: any): any;

        function cutTeams(e: any, t: any): any;

        function deleteAllLocalMsgs(e: any): void;

        function deleteAllLocalSysMsgs(e: any): void;

        function deleteFile(e: any): void;

        function deleteFriend(e: any): void;

        function deleteLocalMsg(e: any): void;

        function deleteLocalMsgs(e: any): void;

        function deleteLocalMsgsBySession(e: any): void;

        function deleteLocalSession(e: any): void;

        function deleteLocalSysMsg(e: any): void;

        function deleteLocalTeam(e: any): void;

        function deleteMsg(e: any): any;

        function deleteSession(e: any): void;

        function deleteSessions(e: any): any;

        function destroy(e: any): void;

        function disconnect(e: any): void;

        function dismissTeam(e: any): void;

        function emit(e: any, t: any, n: any, r: any, i: any, o: any, ...args: any[]): any;

        function eventNames(): any;

        function fetchFile(e: any): void;

        function fetchFileList(e: any): void;

        function fileQuickTransfer(e: any, t: any, n: any): any;

        function filterClientAntispam(e: any): any;

        function findFriend(e: any, t: any): any;

        function findMsg(e: any, t: any): any;

        function findRelation(e: any, t: any): any;

        function findSession(e: any, t: any): any;

        function findSysMsg(e: any, t: any): any;

        function findTeam(e: any, t: any): any;

        function findTeamMember(e: any, t: any): any;

        function findUser(e: any, t: any): any;

        function formatReturnMsg(e: any): any;

        function formatReturnSysMsg(e: any): any;

        function forwardMsg(e: any): any;

        function friendRequest(e: any): void;

        function genBlurOp(e: any): any;

        function genCropOp(e: any): any;

        function genInterlaceOp(e: any): any;

        function genQualityOp(e: any): any;

        function genRotateOp(e: any): any;

        function genStripmetaOp(e: any): any;

        function genTeamMemberId(e: any, t: any): any;

        function genThumbnailOp(e: any): any;

        function getAllSuperTeamMembers(e: any): any;

        function getChatroomAddress(e: any): void;

        function getClientAntispamLexicon(e: any): any;

        function getFile(e: any): void;

        function getFileList(e: any): void;

        function getFriends(e: any): void;

        function getHistoryMsgs(e: any): any;

        function getLocalMsgByIdClient(e: any): void;

        function getLocalMsgs(e: any): void;

        function getLocalMsgsByIdClients(e: any): any;

        function getLocalSession(e: any): any;

        function getLocalSessions(e: any): void;

        function getLocalSysMsgs(e: any): void;

        function getLocalTeamMembers(e: any): any;

        function getLocalTeams(e: any): any;

        function getMutedTeamMembers(e: any): void;

        function getMyInfo(e: any): any;

        function getMyTeamMembers(e: any): any;

        function getNosOriginUrl(e: any): void;

        function getNosToken(e: any): void;

        function getNosTokenTrans(e: any): void;

        function getPushNotificationMultiportConfig(): any;

        function getRelations(e: any): void;

        function getRobots(e: any): void;

        function getServerTime(e: any): void;

        function getSimpleNosToken(...args: any[]): any;

        function getSuperTeam(e: any): void;

        function getSuperTeamMembersByJoinTime(e: any): void;

        function getSuperTeams(e: any): void;

        function getTeam(e: any): void;

        function getTeamMemberByTeamIdAndAccount(e: any): void;

        function getTeamMemberInvitorAccid(e: any): void;

        function getTeamMembers(e: any): void;

        function getTeamMsgReadAccounts(e: any): void;

        function getTeamMsgReads(e: any): void;

        function getTeams(e: any): void;

        function getUser(e: any): any;

        function getUsers(e: any): any;

        function init(e: any): any;

        function insertLocalSession(e: any): void;

        function interlaceImage(e: any): any;

        function isConnected(): any;

        function isMsgRemoteRead(e: any): any;

        function kick(e: any): void;

        function leaveSuperTeam(e: any): void;

        function leaveTeam(e: any): void;

        function listeners(e: any, t: any): any;

        function logout(e: any): void;

        function markInBlacklist(e: any): void;

        function markInMutelist(e: any): void;

        function markMsgRead(e: any): void;

        function markSysMsgRead(e: any): any;

        function mergeFriends(e: any, t: any): any;

        function mergeLoginPorts(e: any, t: any): any;

        function mergeMsgs(e: any, t: any): any;

        function mergeObjArray(e: any, t: any, n: any): any;

        function mergeRelations(e: any, t: any): any;

        function mergeSessions(e: any, t: any): any;

        function mergeSysMsgs(e: any, t: any): any;

        function mergeTeamMembers(e: any, t: any): any;

        function mergeTeams(e: any, t: any): any;

        function mergeUsers(e: any, t: any): any;

        function muteTeamAll(e: any): void;

        function notifyForNewTeamMsg(e: any): void;

        function off(e: any, t: any, n: any, r: any): any;

        function on(e: any, t: any, n: any): any;

        function once(e: any, t: any, n: any): any;

        function packFileDownloadName(e: any): any;

        function parseRobotTemplate(e: any): any;

        function passFriendApply(e: any): void;

        function passTeamApply(e: any): void;

        function previewFile(e: any): void;

        function processCallback(e: any, t: any): void;

        function processCallbackPromise(e: any, t: any): any;

        function processCustom(e: any): void;

        function processImage(e: any): any;

        function processPs(e: any): void;

        function publishEvent(e: any): void;

        function qualityImage(e: any): any;

        function querySubscribeEventsByAccounts(e: any): void;

        function querySubscribeEventsByType(e: any): void;

        function rejectFriendApply(e: any): void;

        function rejectTeamApply(e: any): void;

        function rejectTeamInvite(e: any): void;

        function removeAllListeners(e: any): any;

        function removeDB(e: any): void;

        function removeFile(e: any): void;

        function removeFromBlacklist(e: any): any;

        function removeFromMutelist(e: any): any;

        function removeListener(e: any, t: any, n: any, r: any): any;

        function removeSuperTeamMembers(e: any): void;

        function removeTeamManagers(e: any): void;

        function removeTeamMembers(e: any): void;

        function reportLogs(...args: any[]): void;

        function resendMsg(e: any): any;

        function reset(): void;

        function resetAllSessionUnread(): void;

        function resetCurrSession(): void;

        function resetSessionUnread(e: any): void;

        function rotateImage(e: any): any;

        function searchHistoryMsgs(e: any): void;

        function sendCmd(...args: any[]): void;

        function sendCmdUsePromise(e: any, t: any): any;

        function sendCmdWithResp(e: any, t: any, n: any): void;

        function sendCustomMsg(e: any): any;

        function sendCustomSysMsg(e: any): any;

        function sendFile(e: any): any;

        function sendGeo(e: any): any;

        function sendMsg(e: any, t: any): any;

        function sendMsgReceipt(e: any): void;

        function sendRobotMsg(e: any): any;

        function sendTeamMsgReceipt(e: any): void;

        function sendText(e: any): any;

        function sendTipMsg(e: any): any;

        function setCurrSession(e: any): void;

        function setMaxListeners(): any;

        function setOptions(e: any): void;

        function signalingAccept(e: any): any;

        function signalingCall(e: any): any;

        function signalingCancel(e: any): any;

        function signalingClose(...args: any[]): any;

        function signalingControl(e: any): any;

        function signalingCreate(...args: any[]): any;

        function signalingCreateAndJoin(e: any): any;

        function signalingDelay(...args: any[]): any;

        function signalingGetChannelInfo(...args: any[]): any;

        function signalingInvite(...args: any[]): any;

        function signalingJoin(...args: any[]): any;

        function signalingLeave(...args: any[]): any;

        function signalingMarkMsgRead(...args: any[]): any;

        function signalingReject(e: any): any;

        function signalingSync(): any;

        function stripImageMeta(e: any): any;

        function subscribeEvent(e: any): void;

        function thumbnailImage(e: any): any;

        function transDoc(e: any): void;

        function transferTeam(e: any): void;

        function trimMsgFlag(e: any): void;

        function unSubscribeEventsByAccounts(e: any): void;

        function unSubscribeEventsByType(e: any): void;

        function updateFriend(e: any): void;

        function updateInfoInSuperTeam(e: any): void;

        function updateInfoInTeam(e: any): void;

        function updateLocalMsg(e: any): void;

        function updateLocalSession(e: any): void;

        function updateLocalSysMsg(e: any): void;

        function updateMuteStateInTeam(e: any): void;

        function updateMyInfo(e: any): void;

        function updateNickInTeam(e: any): void;

        function updatePrivateConf(e: any): any;

        function updatePushNotificationMultiportConfig(e: any): void;

        function updateSuperTeam(e: any): void;

        function updateTeam(e: any): void;

        function uploadSdkLogUrl(e: any): any;

        function viewImageBlur(e: any): any;

        function viewImageCrop(e: any): any;

        function viewImageInterlace(e: any): any;

        function viewImageQuality(e: any): any;

        function viewImageRotate(e: any): any;

        function viewImageStripMeta(e: any): any;

        function viewImageSync(e: any): any;

        function viewImageThumbnail(e: any): any;

    }

    namespace io {
        class EventEmitter {
            constructor();

            addListener(e: any, n: any): any;

            emit(e: any, ...args: any[]): any;

            listeners(e: any): any;

            on(e: any, n: any): any;

            once(e: any, t: any, ...args: any[]): any;

            removeAllListeners(e: any): any;

            removeListener(e: any, n: any): any;

        }

        class Socket {
            constructor(e: any);

            addListener(e: any, n: any): any;

            connect(e: any): any;

            disconnect(): any;

            disconnectSync(): void;

            doConnect(): any;

            emit(e: any, ...args: any[]): any;

            flushBuffer(): void;

            getTransport(e: any): any;

            handshake(e: any): void;

            isXDomain(): any;

            listeners(e: any): any;

            of(e: any): any;

            on(e: any, n: any): any;

            onClose(): void;

            onConnect(): void;

            onDisconnect(e: any): void;

            onError(e: any): void;

            onOpen(): void;

            onPacket(e: any): void;

            once(e: any, t: any, ...args: any[]): any;

            packet(e: any): any;

            publish(...args: any[]): void;

            reconnect(): any;

            removeAllListeners(e: any): any;

            removeListener(e: any, n: any): any;

            setBuffer(e: any): void;

            setHeartbeatTimeout(): void;

            tryNextTransport(): void;

        }

        class SocketNamespace {
            constructor(e: any, t: any);

            $emit(e: any, ...args: any[]): any;

            addListener(e: any, n: any): any;

            disconnect(): any;

            emit(e: any, ...args: any[]): any;

            listeners(e: any): any;

            of(...args: any[]): any;

            on(e: any, n: any): any;

            onPacket(e: any, ...args: any[]): void;

            once(e: any, t: any, ...args: any[]): any;

            packet(e: any): any;

            removeAllListeners(e: any): any;

            removeListener(e: any, n: any): any;

            send(e: any, t: any): any;

        }

        class Transport {
            constructor(e: any, t: any);

            addListener(e: any, n: any): any;

            clearCloseTimeout(): void;

            clearTimeouts(): void;

            emit(e: any, ...args: any[]): any;

            heartbeats(): any;

            listeners(e: any): any;

            on(e: any, n: any): any;

            onClose(): void;

            onConnect(): any;

            onConnectionOver(): void;

            onData(e: any): any;

            onDisconnect(): any;

            onDisconnectDone(): void;

            onHeartbeat(e: any): void;

            onOpen(): void;

            onPacket(e: any): any;

            once(e: any, t: any, ...args: any[]): any;

            packet(e: any): void;

            prepareUrl(): any;

            ready(e: any, t: any): void;

            removeAllListeners(e: any): any;

            removeListener(e: any, n: any): any;

            setCloseTimeout(): void;

        }

        const j: any[];

        const protocol: number;

        const sockets: {
        };

        const transports: string[];

        const version: string;

        function connect(e: any, r: any): any;

        namespace JSON {
            function parse(p0: any, p1: any): any;

            function stringify(p0: any, p1: any, p2: any): any;

        }

        namespace Transport {
            class XHR {
                constructor(e: any, ...args: any[]);

                close(): any;

                open(): any;

                payload(e: any): void;

                post(e: any): void;

                request(e: any): any;

                scheme(): any;

                send(e: any): any;

                static check(e: any, r: any): any;

                static xdomainCheck(e: any): any;

            }

            class websocket {
                constructor(e: any, ...args: any[]);

                close(): any;

                onError(e: any): void;

                open(): any;

                payload(e: any): any;

                scheme(): any;

                send(e: any): any;

                static check(): any;

                static xdomainCheck(): any;

            }

        }

        namespace parser {
            const advice: string[];

            const packets: string[];

            const reasons: string[];

            function decodePacket(e: any): any;

            function decodePayload(e: any): any;

            function encodePacket(e: any): any;

            function encodePayload(e: any): any;

        }

        namespace util {
            const ua: {
                hasCORS: boolean;
                iDevice: boolean;
                webkit: boolean;
            };

            function chunkQuery(e: any): any;

            function defer(e: any): any;

            function indexOf(e: any, t: any, n: any): any;

            function inherit(e: any, t: any): void;

            function intersect(e: any, t: any): any;

            function isArray(p0: any): any;

            function load(e: any): any;

            function merge(e: any, t: any, r: any, s: any): any;

            function mixin(e: any, t: any): void;

            function on(e: any, t: any, n: any, r: any): void;

            function parseUri(e: any): any;

            function query(e: any, t: any): any;

            function request(e: any): any;

            function toArray(e: any): any;

            function uniqueUri(e: any): any;

        }

    }

    namespace parser {
        const configMap: {
            cmdConfig: {
                acceptTeamInvite: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                addSuperTeamMembers: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                addTeamManagers: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                addTeamMembers: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                appBackground: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                applyTeam: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                audioToText: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                batchMarkRead: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                clearServerHistoryMsgs: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                createTeam: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                deleteFriend: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                deleteMsg: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                deleteSessions: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                dismissTeam: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                fetchFile: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                fetchFileList: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                fileQuickTransfer: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                friendRequest: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getBlacklist: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getChatroomAddress: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getClientAntispam: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getFriends: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getHistoryMsgs: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getMutedTeamMembers: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getMutelist: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getMySuperTeamMembers: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getMyTeamMembers: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getNosOriginUrl: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getNosToken: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getNosTokenTrans: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getRelations: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getServerTime: {
                    cid: number;
                    params: any[];
                    sid: number;
                };
                getSessions: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getSimpleNosToken: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getSuperTeam: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getSuperTeamHistoryMsgs: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getSuperTeamMembers: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getSuperTeamMembersByJoinTime: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getSuperTeams: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getTeam: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getTeamHistoryMsgs: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getTeamMemberInvitorAccid: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getTeamMembers: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getTeamMsgReadAccounts: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getTeamMsgReads: {
                    cid: number;
                    params: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getTeams: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                getUsers: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                heartbeat: {
                    cid: number;
                    sid: number;
                };
                kick: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                leaveSuperTeam: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                leaveTeam: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                login: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                logout: {
                    cid: number;
                    sid: number;
                };
                markInBlacklist: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                markInMutelist: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                markRead: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                markSessionAck: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                muteTeamAll: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                passTeamApply: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                processImage: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                publishEvent: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                pushEvent: {
                    cid: number;
                    sid: number;
                };
                pushEvents: {
                    cid: number;
                    sid: number;
                };
                querySubscribeEventsByAccounts: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                querySubscribeEventsByType: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                rejectTeamApply: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                rejectTeamInvite: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                removeFile: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                removeSuperTeamMembers: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                removeTeamManagers: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                removeTeamMembers: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                searchHistoryMsgs: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                searchTeamHistoryMsgs: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                sendCustomSysMsg: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                sendFilterCustomSysMsg: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                sendFilterMsg: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                sendMsg: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                sendMsgReceipt: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                sendSuperTeamMsg: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                sendTeamMsg: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                sendTeamMsgReceipt: {
                    cid: number;
                    params: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                signalingAccept: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                signalingCancel: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                signalingClose: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                signalingControl: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                signalingCreate: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                signalingDelay: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                signalingGetChannelInfo: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                signalingInvite: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                signalingJoin: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                signalingLeave: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                signalingReject: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                subscribeEvent: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                sync: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                syncSuperTeamMembers: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                syncTeamMembers: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                transferTeam: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                unSubscribeEventsByAccounts: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                unSubscribeEventsByType: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                updateDonnop: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                updateFriend: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                updateInfoInSuperTeam: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                updateInfoInTeam: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                updateMuteStateInTeam: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                updateMyInfo: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                updateNickInTeam: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                updatePushToken: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                updateSuperTeam: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                updateTeam: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
                uploadSdkLogUrl: {
                    cid: number;
                    params: {
                        name: string;
                        type: string;
                    }[];
                    sid: number;
                };
            };
            idMap: {
                auth: {
                    id: number;
                    kick: number;
                    kicked: number;
                    login: number;
                    logout: number;
                    multiPortLogin: number;
                };
                avSignal: {
                    id: number;
                    signalingAccept: number;
                    signalingCancel: number;
                    signalingChannelsSyncNotify: number;
                    signalingClose: number;
                    signalingControl: number;
                    signalingCreate: number;
                    signalingDelay: number;
                    signalingGetChannelInfo: number;
                    signalingInvite: number;
                    signalingJoin: number;
                    signalingLeave: number;
                    signalingMutilClientSyncNotify: number;
                    signalingNotify: number;
                    signalingReject: number;
                    signalingUnreadMessageSyncNotify: number;
                };
                chatroom: {
                    getChatroomAddress: number;
                    id: number;
                };
                eventService: {
                    id: number;
                    publishEvent: number;
                    pushEvent: number;
                    pushEvents: number;
                    querySubscribeEventsByAccounts: number;
                    querySubscribeEventsByType: number;
                    subscribeEvent: number;
                    unSubscribeEventsByAccounts: number;
                    unSubscribeEventsByType: number;
                };
                filter: {
                    filterMsg: number;
                    filterSysMsg: number;
                    id: number;
                    sendFilterCustomSysMsg: number;
                    sendFilterMsg: number;
                };
                friend: {
                    deleteFriend: number;
                    friendRequest: number;
                    getFriends: number;
                    id: number;
                    syncDeleteFriend: number;
                    syncFriendRequest: number;
                    syncUpdateFriend: number;
                    updateFriend: number;
                };
                link: {
                    heartbeat: number;
                    id: number;
                };
                misc: {
                    audioToText: number;
                    fetchFile: number;
                    fetchFileList: number;
                    fileQuickTransfer: number;
                    getClientAntispam: number;
                    getNosOriginUrl: number;
                    getNosToken: number;
                    getNosTokenTrans: number;
                    getServerTime: number;
                    getSimpleNosToken: number;
                    id: number;
                    notifyTransLog: number;
                    notifyUploadLog: number;
                    processImage: number;
                    removeFile: number;
                    uploadSdkLogUrl: number;
                };
                msg: {
                    broadcastMsg: number;
                    clearServerHistoryMsgs: number;
                    deleteMsg: number;
                    deleteSessions: number;
                    getHistoryMsgs: number;
                    getSessions: number;
                    id: number;
                    markSessionAck: number;
                    msg: number;
                    msgDeleted: number;
                    msgReceipt: number;
                    searchHistoryMsgs: number;
                    sendCustomSysMsg: number;
                    sendMsg: number;
                    sendMsgReceipt: number;
                    syncSendMsg: number;
                    sysMsg: number;
                };
                notify: {
                    batchMarkRead: number;
                    id: number;
                    markRead: number;
                    syncBroadcastMsgs: number;
                    syncMsgReceipts: number;
                    syncOfflineMsgs: number;
                    syncOfflineSysMsgs: number;
                    syncRoamingMsgs: number;
                    syncRobots: number;
                    syncSuperTeamRoamingMsgs: number;
                };
                superTeam: {
                    addSuperTeamMembers: number;
                    getMySuperTeamMembers: number;
                    getSuperTeam: number;
                    getSuperTeamHistoryMsgs: number;
                    getSuperTeamMembers: number;
                    getSuperTeamMembersByJoinTime: number;
                    getSuperTeams: number;
                    id: number;
                    leaveSuperTeam: number;
                    removeSuperTeamMembers: number;
                    sendSuperTeamMsg: number;
                    superTeamMsg: number;
                    syncCreateSuperTeam: number;
                    syncMySuperTeamMembers: number;
                    syncSendSuperTeamMsg: number;
                    syncSuperTeamMembers: number;
                    syncSuperTeams: number;
                    syncUpdateSuperTeamMember: number;
                    updateInfoInSuperTeam: number;
                    updateSuperTeam: number;
                };
                sync: {
                    id: number;
                    sync: number;
                    syncSuperTeamMembers: number;
                    syncTeamMembers: number;
                };
                team: {
                    acceptTeamInvite: number;
                    addTeamManagers: number;
                    addTeamMembers: number;
                    applyTeam: number;
                    createTeam: number;
                    dismissTeam: number;
                    getMutedTeamMembers: number;
                    getMyTeamMembers: number;
                    getTeam: number;
                    getTeamHistoryMsgs: number;
                    getTeamMemberInvitorAccid: number;
                    getTeamMembers: number;
                    getTeamMsgReadAccounts: number;
                    getTeamMsgReads: number;
                    getTeams: number;
                    id: number;
                    leaveTeam: number;
                    muteTeamAll: number;
                    notifyTeamMsgReads: number;
                    passTeamApply: number;
                    rejectTeamApply: number;
                    rejectTeamInvite: number;
                    removeTeamManagers: number;
                    removeTeamMembers: number;
                    searchTeamHistoryMsgs: number;
                    sendTeamMsg: number;
                    sendTeamMsgReceipt: number;
                    syncCreateTeam: number;
                    syncMyTeamMembers: number;
                    syncSendTeamMsg: number;
                    syncTeamMembers: number;
                    syncTeams: number;
                    syncUpdateTeamMember: number;
                    teamMsg: number;
                    teamMsgs: number;
                    transferTeam: number;
                    updateInfoInTeam: number;
                    updateMuteStateInTeam: number;
                    updateNickInTeam: number;
                    updateTeam: number;
                };
                user: {
                    appBackground: number;
                    getBlacklist: number;
                    getMutelist: number;
                    getRelations: number;
                    getUsers: number;
                    id: number;
                    markInBlacklist: number;
                    markInMutelist: number;
                    syncMyInfo: number;
                    syncUpdateMyInfo: number;
                    updateDonnop: number;
                    updateMyInfo: number;
                    updatePushToken: number;
                };
            };
            packetConfig: {
                "101_1": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "101_2": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "101_3": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "101_7": {
                    cmd: string;
                    service: string;
                };
                "12_1": {
                    cmd: string;
                    service: string;
                };
                "12_101": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "12_102": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "12_103": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "12_2": {
                    cmd: string;
                    service: string;
                };
                "12_3": {
                    cmd: string;
                    service: string;
                };
                "12_4": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "12_5": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "12_6": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "13_1": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "14_1": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "14_2": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "14_3": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "14_4": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "14_5": {
                    cmd: string;
                    service: string;
                };
                "14_6": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "14_7": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "14_9": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "15_1": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "15_10": {
                    cmd: string;
                    response: any[];
                    service: string;
                };
                "15_11": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "15_12": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "15_13": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "15_14": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "15_15": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "15_2": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "15_3": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "15_4": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "15_5": {
                    cmd: string;
                    response: any[];
                    service: string;
                };
                "15_6": {
                    cmd: string;
                    response: any[];
                    service: string;
                };
                "15_7": {
                    cmd: string;
                    response: any[];
                    service: string;
                };
                "15_8": {
                    cmd: string;
                    response: any[];
                    service: string;
                };
                "15_9": {
                    cmd: string;
                    response: any[];
                    service: string;
                };
                "1_2": {
                    cmd: string;
                    service: string;
                };
                "21_10": {
                    cmd: string;
                    service: string;
                };
                "21_101": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "21_102": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "21_109": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "21_11": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "21_110": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "21_111": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "21_113": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "21_12": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "21_13": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "21_14": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "21_15": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "21_2": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "21_3": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "21_5": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "21_6": {
                    cmd: string;
                    service: string;
                };
                "21_7": {
                    cmd: string;
                    service: string;
                };
                "21_8": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "21_9": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "2_3": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "2_5": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "2_6": {
                    cmd: string;
                    service: string;
                };
                "2_7": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "2_8": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "3_1": {
                    cmd: string;
                    service: string;
                };
                "3_10": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "3_103": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "3_105": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "3_109": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "3_110": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "3_115": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "3_15": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "3_2": {
                    cmd: string;
                    service: string;
                };
                "3_3": {
                    cmd: string;
                    service: string;
                };
                "3_4": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "3_5": {
                    cmd: string;
                    service: string;
                };
                "3_6": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "3_7": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "3_8": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "4_1": {
                    service: string;
                };
                "4_100": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "4_101": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "4_12": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "4_13": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "4_14": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "4_15": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "4_16": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "4_17": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "4_2": {
                    service: string;
                };
                "4_3": {
                    cmd: string;
                    service: string;
                };
                "4_4": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "4_5": {
                    cmd: string;
                    service: string;
                };
                "4_6": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "4_9": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "5_1": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "5_2": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "5_3": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "6_1": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "6_10": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "6_11": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "6_17": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "6_18": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "6_2": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "6_22": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "6_23": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "6_3": {
                    cmd: string;
                    service: string;
                };
                "6_5": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "6_6": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "6_7": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "6_8": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "6_9": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "7_1": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                    trivialErrorCodes: number[];
                };
                "7_10": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "7_101": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "7_11": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "7_116": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "7_12": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "7_13": {
                    cmd: string;
                    service: string;
                };
                "7_14": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "7_15": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "7_16": {
                    cmd: string;
                    service: string;
                };
                "7_17": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "7_18": {
                    cmd: string;
                    service: string;
                };
                "7_2": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "7_3": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "7_6": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "7_7": {
                    cmd: string;
                    service: string;
                    trivialErrorCodes: number[];
                };
                "7_8": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "7_9": {
                    cmd: string;
                    service: string;
                };
                "8_1": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_10": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_101": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_102": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_109": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_11": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_111": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_119": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_12": {
                    cmd: string;
                    service: string;
                };
                "8_126": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_13": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_14": {
                    cmd: string;
                    service: string;
                };
                "8_15": {
                    cmd: string;
                    service: string;
                };
                "8_16": {
                    cmd: string;
                    service: string;
                };
                "8_17": {
                    cmd: string;
                    service: string;
                };
                "8_18": {
                    cmd: string;
                    service: string;
                };
                "8_19": {
                    cmd: string;
                    service: string;
                };
                "8_2": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_20": {
                    cmd: string;
                    service: string;
                };
                "8_21": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_22": {
                    cmd: string;
                    service: string;
                };
                "8_23": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_24": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_25": {
                    cmd: string;
                    service: string;
                };
                "8_26": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_27": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_28": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_29": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_3": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_30": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_31": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_32": {
                    cmd: string;
                    response: any[];
                    service: string;
                };
                "8_33": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_4": {
                    cmd: string;
                    response: {
                        entity: string;
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_5": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_6": {
                    cmd: string;
                    service: string;
                };
                "8_7": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
                "8_8": {
                    cmd: string;
                    service: string;
                };
                "8_9": {
                    cmd: string;
                    response: {
                        name: string;
                        type: string;
                    }[];
                    service: string;
                };
            };
        };

        const protocol: any;

        const serializeMap: {
            aosPushInfo: {
                hasTokenPreviously: number;
                pushType: number;
            };
            audioToText: {
                url: number;
            };
            avSignalTag: {
                attach: number;
                attachExt: number;
                channelCreateTime: number;
                channelExpireTime: number;
                channelId: number;
                channelInValid: number;
                channelName: number;
                creator: number;
                ext: number;
                from: number;
                isSave: number;
                members: number;
                msgid: number;
                needBadge: number;
                needPush: number;
                pushContent: number;
                pushPayload: number;
                pushTitle: number;
                requestId: number;
                time: number;
                to: number;
                type: number;
                uid: number;
            };
            broadcastMsg: {
                body: number;
                broadcastId: number;
                fromAccid: number;
                fromUid: number;
                timestamp: number;
            };
            clearMsgsParams: {
                account: number;
                delRoam: number;
            };
            clientAntispam: {
                md5: number;
                nosurl: number;
                thesaurus: number;
                version: number;
            };
            delFriendParams: {
                delAlias: number;
            };
            donnop: {
                open: number;
            };
            fileListParam: {
                fromDocId: number;
                limit: number;
            };
            fileQuickTransfer: {
                md5: number;
                size: number;
                threshold: number;
                url: number;
            };
            friend: {
                account: number;
                alias: number;
                beflag: number;
                bits: number;
                createTime: number;
                custom: number;
                flag: number;
                serverex: number;
                source: number;
                updateTime: number;
            };
            imageOp: {
                blurRadius: number;
                blurSigma: number;
                cropHeight: number;
                cropWidth: number;
                cropX: number;
                cropY: number;
                interlace: number;
                pixelPixel: number;
                qualityQuality: number;
                rotateAngle: number;
                stripmeta: number;
                thumbnailAxisX: number;
                thumbnailAxisY: number;
                thumbnailCenterX: number;
                thumbnailCenterY: number;
                thumbnailEnlarge: number;
                thumbnailHeight: number;
                thumbnailMode: number;
                thumbnailToStatic: number;
                thumbnailWidth: number;
                type: number;
                typeType: number;
                watermarkDissolve: number;
                watermarkDx: number;
                watermarkDy: number;
                watermarkFont: number;
                watermarkFontColor: number;
                watermarkFontSize: number;
                watermarkGravity: number;
                watermarkImage: number;
                watermarkText: number;
                watermarkType: number;
            };
            login: {
                account: number;
                appKey: number;
                appLogin: number;
                browser: number;
                clientType: number;
                customTag: number;
                deviceId: number;
                deviceInfo: number;
                isReactNative: number;
                os: number;
                protocolVersion: number;
                pushToken: number;
                pushTokenName: number;
                sdkVersion: number;
                session: number;
                token: number;
            };
            loginPort: {
                account: number;
                connectionId: number;
                customTag: number;
                deviceId: number;
                deviceInfo: number;
                ip: number;
                mac: number;
                os: number;
                time: number;
                type: number;
            };
            loginRes: {
                connectionId: number;
                country: number;
                customTag: number;
                hasXMPush: number;
                ip: number;
                lastLoginDeviceId: number;
                port: number;
            };
            msg: {
                antiSpamBusinessId: number;
                antiSpamContent: number;
                antiSpamUsingYidun: number;
                apnsAccounts: number;
                apnsContent: number;
                apnsForcePush: number;
                attach: number;
                body: number;
                cc: number;
                clientAntiSpam: number;
                custom: number;
                from: number;
                fromClientType: number;
                fromDeviceId: number;
                fromNick: number;
                idClient: number;
                idServer: number;
                isHistoryable: number;
                isInBlackList: number;
                isMuted: number;
                isOfflinable: number;
                isPushable: number;
                isReplyMsg: number;
                isRoamingable: number;
                isSyncable: number;
                isUnreadable: number;
                needMsgReceipt: number;
                needPushNick: number;
                pushContent: number;
                pushPayload: number;
                resend: number;
                scene: number;
                tempTeamMemberCount: number;
                time: number;
                to: number;
                type: number;
                userUpdateTime: number;
                yidunEnable: number;
            };
            msgEvent: {
                account: number;
                appid: number;
                broadcastType: number;
                clientType: number;
                consid: number;
                custom: number;
                durable: number;
                enableMultiClient: number;
                idClient: number;
                idServer: number;
                serverConfig: number;
                serverCustom: number;
                sync: number;
                time: number;
                type: number;
                validTime: number;
                validTimeType: number;
                value: number;
            };
            msgEventSubscribe: {
                from: number;
                subscribeTime: number;
                sync: number;
                time: number;
                to: number;
                type: number;
            };
            msgReceipt: {
                from: number;
                idClient: number;
                time: number;
                to: number;
            };
            msgType: {
                audio: number;
                custom: number;
                datatunnel_new: number;
                file: number;
                location: number;
                netcall_audio: number;
                netcall_vedio: number;
                notification: number;
                picture: number;
                robot: number;
                text: number;
                tips: number;
                video: number;
            };
            nosFileUrlTag: {
                originUrl: number;
                safeUrl: number;
            };
            nosToken: {
                bucket: number;
                expireSec: number;
                expireTime: number;
                objectName: number;
                shortUrl: number;
                tag: number;
                token: number;
            };
            robot: {
                account: number;
                avatar: number;
                bindTime: number;
                botid: number;
                config: number;
                createTime: number;
                custid: number;
                intro: number;
                nick: number;
                updateTime: number;
                valid: number;
            };
            specialRelation: {
                account: number;
                createTime: number;
                isBlacked: number;
                isMuted: number;
                updateTime: number;
            };
            superTeam: {
                announcement: number;
                avatar: number;
                beInviteMode: number;
                bits: number;
                createTime: number;
                custom: number;
                intro: number;
                inviteMode: number;
                joinMode: number;
                level: number;
                memberNum: number;
                memberUpdateTime: number;
                mute: number;
                muteType: number;
                name: number;
                owner: number;
                selfCustom: number;
                serverCustom: number;
                teamId: number;
                type: number;
                updateCustomMode: number;
                updateTeamMode: number;
                updateTime: number;
                valid: number;
                validToCurrentUser: number;
            };
            superTeamMember: {
                account: number;
                active: number;
                bits: number;
                createTime: number;
                custom: number;
                invitoraccid: number;
                joinTime: number;
                mute: number;
                nickInTeam: number;
                teamId: number;
                type: number;
                updateTime: number;
                valid: number;
            };
            sync: {
                avSignal: number;
                broadcastMsgs: number;
                deleteMsg: number;
                donnop: number;
                filterMsgs: number;
                friendUsers: number;
                friends: number;
                msgReceipts: number;
                myInfo: number;
                myInfoInSuperTeams: number;
                myTeamMembers: number;
                netcallMsgs: number;
                offlineMsgs: number;
                relations: number;
                roamingMsgs: number;
                robots: number;
                sessionAck: number;
                sessions: number;
                superTeamRoamingMsgs: number;
                superTeams: number;
                teams: number;
            };
            sysMsg: {
                antiSpamContent: number;
                apnsText: number;
                attach: number;
                cc: number;
                deletedIdClient: number;
                deletedIdServer: number;
                deletedMsgFromNick: number;
                deletedMsgTime: number;
                from: number;
                idServer: number;
                isPushable: number;
                isUnreadable: number;
                needPushNick: number;
                opeAccount: number;
                ps: number;
                pushPayload: number;
                sendToOnlineUsersOnly: number;
                time: number;
                to: number;
                type: number;
                yidunEnable: number;
            };
            team: {
                announcement: number;
                avatar: number;
                beInviteMode: number;
                bits: number;
                createTime: number;
                custom: number;
                intro: number;
                inviteMode: number;
                joinMode: number;
                level: number;
                memberNum: number;
                memberUpdateTime: number;
                mute: number;
                muteType: number;
                name: number;
                owner: number;
                selfCustom: number;
                serverCustom: number;
                teamId: number;
                type: number;
                updateCustomMode: number;
                updateTeamMode: number;
                updateTime: number;
                valid: number;
                validToCurrentUser: number;
            };
            teamMember: {
                account: number;
                active: number;
                bits: number;
                custom: number;
                invitorAccid: number;
                joinTime: number;
                mute: number;
                nickInTeam: number;
                teamId: number;
                type: number;
                updateTime: number;
                valid: number;
            };
            teamMsgReceipt: {
                account: number;
                idClient: number;
                idServer: number;
                read: number;
                teamId: number;
                unread: number;
            };
            transInfo: {
                docId: number;
                extra: number;
                flag: number;
                name: number;
                pageCount: number;
                picInfo: number;
                prefix: number;
                size: number;
                state: number;
                transSize: number;
                transType: number;
                type: number;
            };
            transToken: {
                body: number;
                extra: number;
                name: number;
                size: number;
                transType: number;
                type: number;
            };
            user: {
                account: number;
                avatar: number;
                birth: number;
                createTime: number;
                custom: number;
                email: number;
                gender: number;
                nick: number;
                sign: number;
                tel: number;
                updateTime: number;
            };
        };

        const unserializeMap: {
            aosPushInfo: {
                "110": string;
                "111": string;
            };
            audioToText: {
                "2": string;
            };
            avSignalTag: {
                "1": string;
                "10": string;
                "11": string;
                "12": string;
                "13": string;
                "14": string;
                "15": string;
                "16": string;
                "17": string;
                "18": string;
                "19": string;
                "2": string;
                "20": string;
                "21": string;
                "22": string;
                "23": string;
                "24": string;
                "3": string;
                "4": string;
                "5": string;
                "6": string;
                "7": string;
                "8": string;
            };
            broadcastMsg: {
                "1": string;
                "2": string;
                "3": string;
                "4": string;
                "5": string;
            };
            clearMsgsParams: {
                "1": string;
                "2": string;
            };
            clientAntispam: {
                "1": string;
                "2": string;
                "3": string;
                "4": string;
            };
            delFriendParams: {
                "1": string;
            };
            donnop: {
                "1": string;
            };
            fileListParam: {
                "1": string;
                "2": string;
            };
            fileQuickTransfer: {
                "1": string;
                "2": string;
                "3": string;
                "4": string;
            };
            friend: {
                "10": string;
                "11": string;
                "12": string;
                "13": string;
                "4": string;
                "5": string;
                "6": string;
                "7": string;
                "8": string;
                "9": string;
            };
            imageOp: {
                "0": string;
                "1": string;
                "10": string;
                "11": string;
                "12": string;
                "13": string;
                "14": string;
                "15": string;
                "16": string;
                "17": string;
                "18": string;
                "19": string;
                "2": string;
                "20": string;
                "21": string;
                "22": string;
                "23": string;
                "24": string;
                "25": string;
                "26": string;
                "27": string;
                "28": string;
                "29": string;
                "3": string;
                "30": string;
                "31": string;
                "4": string;
                "5": string;
                "6": string;
                "7": string;
                "8": string;
                "9": string;
            };
            login: {
                "10": string;
                "1000": string;
                "11": string;
                "112": string;
                "13": string;
                "18": string;
                "19": string;
                "24": string;
                "26": string;
                "3": string;
                "32": string;
                "38": string;
                "4": string;
                "6": string;
                "8": string;
                "9": string;
            };
            loginPort: {
                "102": string;
                "103": string;
                "109": string;
                "13": string;
                "19": string;
                "3": string;
                "32": string;
                "38": string;
                "4": string;
                "5": string;
            };
            loginRes: {
                "102": string;
                "103": string;
                "104": string;
                "106": string;
                "111": string;
                "17": string;
                "38": string;
            };
            msg: {
                "0": string;
                "1": string;
                "10": string;
                "100": string;
                "101": string;
                "102": string;
                "104": string;
                "105": string;
                "106": string;
                "107": string;
                "108": string;
                "109": string;
                "11": string;
                "110": string;
                "111": string;
                "112": string;
                "12": string;
                "13": string;
                "14": string;
                "15": string;
                "16": string;
                "17": string;
                "18": string;
                "19": string;
                "2": string;
                "20": string;
                "21": string;
                "22": string;
                "23": string;
                "24": string;
                "25": string;
                "26": string;
                "4": string;
                "5": string;
                "6": string;
                "7": string;
                "8": string;
                "9": string;
            };
            msgEvent: {
                "1": string;
                "10": string;
                "101": string;
                "103": string;
                "104": string;
                "106": string;
                "11": string;
                "12": string;
                "13": string;
                "14": string;
                "2": string;
                "3": string;
                "4": string;
                "5": string;
                "6": string;
                "7": string;
                "8": string;
                "9": string;
            };
            msgEventSubscribe: {
                "1": string;
                "102": string;
                "104": string;
                "105": string;
                "2": string;
                "3": string;
            };
            msgReceipt: {
                "1": string;
                "11": string;
                "2": string;
                "7": string;
            };
            msgType: {
                "0": string;
                "1": string;
                "10": string;
                "100": string;
                "11": string;
                "2": string;
                "3": string;
                "4": string;
                "5": string;
                "6": string;
                "7": string;
                "8": string;
                "9": string;
            };
            nosFileUrlTag: {
                "0": string;
                "1": string;
            };
            nosToken: {
                "1": string;
                "2": string;
                "3": string;
                "4": string;
                "7": string;
                "8": string;
                "9": string;
            };
            robot: {
                "10": string;
                "11": string;
                "12": string;
                "13": string;
                "14": string;
                "4": string;
                "5": string;
                "6": string;
                "7": string;
                "8": string;
                "9": string;
            };
            specialRelation: {
                "0": string;
                "1": string;
                "2": string;
                "3": string;
                "4": string;
            };
            superTeam: {
                "1": string;
                "10": string;
                "100": string;
                "101": string;
                "11": string;
                "12": string;
                "13": string;
                "14": string;
                "15": string;
                "16": string;
                "17": string;
                "18": string;
                "19": string;
                "20": string;
                "21": string;
                "22": string;
                "23": string;
                "24": string;
                "3": string;
                "4": string;
                "5": string;
                "6": string;
                "7": string;
                "8": string;
                "9": string;
            };
            superTeamMember: {
                "1": string;
                "10": string;
                "11": string;
                "12": string;
                "13": string;
                "14": string;
                "15": string;
                "3": string;
                "4": string;
                "5": string;
                "7": string;
                "8": string;
                "9": string;
            };
            sync: {
                "1": string;
                "100": string;
                "11": string;
                "12": string;
                "13": string;
                "14": string;
                "15": string;
                "16": string;
                "17": string;
                "18": string;
                "19": string;
                "2": string;
                "20": string;
                "21": string;
                "22": string;
                "23": string;
                "24": string;
                "3": string;
                "6": string;
                "7": string;
                "9": string;
            };
            sysMsg: {
                "0": string;
                "1": string;
                "10": string;
                "105": string;
                "107": string;
                "109": string;
                "11": string;
                "110": string;
                "12": string;
                "13": string;
                "14": string;
                "15": string;
                "16": string;
                "2": string;
                "3": string;
                "4": string;
                "5": string;
                "6": string;
                "7": string;
                "8": string;
                "9": string;
            };
            team: {
                "1": string;
                "10": string;
                "100": string;
                "101": string;
                "11": string;
                "12": string;
                "13": string;
                "14": string;
                "15": string;
                "16": string;
                "17": string;
                "18": string;
                "19": string;
                "20": string;
                "21": string;
                "22": string;
                "23": string;
                "24": string;
                "3": string;
                "4": string;
                "5": string;
                "6": string;
                "7": string;
                "8": string;
                "9": string;
            };
            teamMember: {
                "1": string;
                "10": string;
                "11": string;
                "12": string;
                "13": string;
                "14": string;
                "3": string;
                "4": string;
                "5": string;
                "7": string;
                "8": string;
                "9": string;
            };
            teamMsgReceipt: {
                "0": string;
                "1": string;
                "100": string;
                "101": string;
                "102": string;
                "103": string;
            };
            transInfo: {
                "1": string;
                "10": string;
                "11": string;
                "12": string;
                "2": string;
                "3": string;
                "4": string;
                "5": string;
                "6": string;
                "7": string;
                "8": string;
                "9": string;
            };
            transToken: {
                "1": string;
                "2": string;
                "3": string;
                "4": string;
                "5": string;
                "6": string;
            };
            user: {
                "1": string;
                "10": string;
                "12": string;
                "13": string;
                "3": string;
                "4": string;
                "5": string;
                "6": string;
                "7": string;
                "8": string;
                "9": string;
            };
        };

        function checkObjSafeUrl(e: any, t: any, n: any): void;

        function createCmd(e: any, t: any): any;

        function getOneNosOriginUrl(e: any, t: any, n: any): any;

        function matchNosSafeUrl(e: any): any;

        function mixin(e: any): void;

        function parseResponse(e: any): any;

        function serialize(e: any, t: any): any;

        function setProtocol(e: any): void;

        function syncUnserialize(e: any, t: any): any;

        function unserialize(e: any, t: any): any;

    }

    namespace support {
        function set(e: any, t: any, n: any): void;

    }

    namespace util {
        const emptyObj: {
        };

        const o: {
        };

        const regBlank: RegExp;

        const regWhiteSpace: RegExp;

        const supportFormData: boolean;

        const validFileExts: {
            audio: string[];
            image: string[];
            video: string[];
        };

        const validFileTypes: string[];

        function addEventListener(e: any, t: any, n: any): void;

        function calcHeight(e: any): any;

        function capFirstLetter(e: any): any;

        function checkWithDefault(e: any, t: any, n: any): any;

        function containsNode(e: any, t: any): any;

        function copy(e: any, t: any): any;

        function copyWithNull(e: any, t: any): any;

        function createIframe(e: any): any;

        function cutObjArray(e: any, ...args: any[]): any;

        function dataset(e: any, t: any, n: any): any;

        function dateFromDateTimeLocal(e: any): any;

        function deduplicate(e: any): any;

        function detectCSSFeature(e: any): any;

        function dropArrayDuplicates(e: any): any;

        function emptyFunc(): void;

        function exist(e: any): any;

        function extend(e: any, t: any, n: any): void;

        function f(): void;

        function fetch(e: any, t: any): any;

        function fillPropertyWithDefault(e: any, t: any, n: any): any;

        function fillUndef(e: any, t: any): any;

        function filterFiles(e: any, t: any): any;

        function filterObj(e: any, t: any): any;

        function findObjInArray(e: any, t: any): any;

        function findObjIndexInArray(e: any, t: any): any;

        function fix(e: any, t: any): any;

        function flatten2d(e: any): any;

        function forOwn(...args: any[]): void;

        function format(e: any, t: any): any;

        function genCheckUniqueFunc(e: any, t: any): any;

        function genUrlSep(e: any): any;

        function getClass(e: any): any;

        function getDayStr(e: any): any;

        function getFileInfo(e: any): any;

        function getFileName(e: any): any;

        function getGlobal(): any;

        function getHourStr(e: any): any;

        function getKeys(e: any, t: any): any;

        function getMaxUpdateTime(e: any): any;

        function getMillisecondStr(e: any): any;

        function getMinuteStr(e: any): any;

        function getMonthStr(e: any): any;

        function getSecondStr(e: any): any;

        function getYearStr(e: any): any;

        function guid(): any;

        function html2node(e: any): any;

        function isArray(e: any): any;

        function isBoolean(e: any): any;

        function isDate(e: any): any;

        function isEmpty(e: any): any;

        function isEmptyFunc(e: any): any;

        function isError(e: any): any;

        function isFileInput(e: any): any;

        function isFunction(e: any): any;

        function isJSON(e: any): any;

        function isNumber(e: any): any;

        function isObject(e: any): any;

        function isRegExp(e: any): any;

        function isString(e: any): any;

        function isnull(e: any): any;

        function merge(...args: any[]): any;

        function mergeObjArray(...args: any[]): any;

        function mixin(e: any, t: any): void;

        function notEmptyFunc(e: any): any;

        function notexist(e: any): any;

        function notnull(e: any): any;

        function notundef(e: any): any;

        function object2query(e: any): any;

        function object2string(e: any, t: any, n: any): any;

        function objs2accounts(e: any): any;

        function objs2ids(e: any): any;

        function off(e: any, t: any, n: any): void;

        function on(e: any, t: any, n: any): void;

        function onError(e: any): void;

        function onParamAbsent(e: any, t: any): void;

        function onParamError(e: any, t: any): void;

        function onParamInvalidType(e: any, t: any, n: any, r: any): any;

        function onParamInvalidValue(e: any, t: any, n: any): any;

        function onParamPresent(e: any, t: any): void;

        function parseJSON(t: any): any;

        function promises2cmds(e: any): any;

        function remove(e: any): void;

        function removeEventListener(e: any, t: any, n: any): void;

        function reshape2d(e: any, t: any): any;

        function scrollTop(e: any): any;

        function simpleClone(e: any): any;

        function sizeText(e: any): any;

        function sortObjArray(e: any, t: any): any;

        function splice(e: any, t: any, n: any): any;

        function string2object(...args: any[]): any;

        function target(e: any): any;

        function teams2ids(e: any): any;

        function typeOf(e: any): any;

        function undef(e: any): any;

        function uniqueID(): any;

        function url2origin(t: any): any;

        function verifyArrayMax(e: any, t: any, n: any, r: any): void;

        function verifyBirth(t: any, n: any, r: any): void;

        function verifyBooleanWithDefault(e: any, t: any, n: any, r: any, s: any): void;

        function verifyCallback(e: any, t: any, n: any): void;

        function verifyEmail(e: any, t: any, n: any): void;

        function verifyFileInput(e: any, t: any): any;

        function verifyFileType(e: any, t: any): void;

        function verifyFileUploadCallback(e: any, t: any): void;

        function verifyOptions(e: any, t: any, n: any, r: any, s: any): any;

        function verifyParamAbsent(e: any, t: any, n: any, r: any): void;

        function verifyParamAtLeastPresentOne(e: any, t: any, n: any): any;

        function verifyParamMax(e: any, t: any, n: any, r: any): void;

        function verifyParamMin(e: any, t: any, n: any, r: any): void;

        function verifyParamPresent(e: any, t: any, n: any, r: any): any;

        function verifyParamPresentJustOne(e: any, t: any, n: any): any;

        function verifyParamType(e: any, t: any, n: any, r: any): any;

        function verifyParamValid(e: any, t: any, n: any, r: any): void;

        function verifyTel(t: any, n: any, r: any): void;

    }

    namespace xhr {
        class XMLHttpRequest {
            constructor();

            abort(): any;

            dispatchEvent(e: any): void;

            getAllResponseHeaders(): any;

            getResponseHeader(e: any): any;

            open(e: any, t: any, ...args: any[]): void;

            overrideMimeType(): void;

            send(e: any): any;

            setRequestHeader(e: any, t: any): void;

            static DONE: number;

            static HEADERS_RECEIVED: number;

            static LOADING: number;

            static OPENED: number;

            static UNSENT: number;

        }

        const XDomainRequest: any;

        function del(t: any, n: any, r: any): any;

        function get(t: any, n: any, r: any): any;

        function head(t: any, n: any, r: any): any;

        function patch(t: any, n: any, r: any): any;

        function post(t: any, n: any, r: any): any;

        function put(t: any, n: any, r: any): any;

    }

}

